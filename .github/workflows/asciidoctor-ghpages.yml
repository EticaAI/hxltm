name: asciidoctor-ghpages

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - run: snap install yq
        continue-on-error: true

      - run: yq < ontologia/cor.hxltm.215.yml > ontologia/cor.hxltm.215.json
        continue-on-error: true

      - run: yq < ontologia/0.77.995.yml > ontologia/0.77.995.json
        continue-on-error: true

      - run: cp -r bin/ docs/bin/
        # continue-on-error: true

      - run: cp -r ontologia/ docs/ontologia/
        # continue-on-error: true

      - run: cp -r testum/ docs/testum/
        # continue-on-error: true

      # - run: cp CNAME docs/CNAME
      #   continue-on-error: true

      - run: cp UNLICENSE docs/UNLICENSE
        continue-on-error: true

      # @see https://github.com/reitzig/actions-asciidoctor
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - uses: reitzig/actions-asciidoctor@v2.0.0
        with:
          version: 2.0.16

      - run: asciidoctor --version

      # @see https://github.com/manoelcampos/asciidoctor-ghpages-action
      # Includes the AsciiDoctor GitHub Pages Action to convert adoc files to html and publish to gh-pages branch
      - name: asciidoctor-ghpages
        uses: manoelcampos/asciidoctor-ghpages-action@v2
        with:
          # asciidoctor_params: --attribute=nofooter
          asciidoctor_params: --attribute source-highlighter=rouge
          pdf_build: true
          ebook_main_adoc_file: index
          # adoc_file_ext: .ascii # default is .adoc
          source_dir: docs/ # default is .
          # slides_build: true
          # pre_build:
          # post_build: 'echo "hxltm.etica.ai" > CNAME'
          pre_build: find . type -f
          # pre_build: git add .

      # Not the lastest, but can be used on local ubuntu if no advanced features need
      # sudo apt install asciidoctor
      # sudo apt install ruby-asciidoctor-pdf
      # sudo gem install asciidoctor-pdf

      # (error) asciidoctor --backend pdf docs/eng-Latn/index.adoc
      # asciidoctor-pdf --attribute allow-uri-read=1 docs/eng-Latn/index.adoc
